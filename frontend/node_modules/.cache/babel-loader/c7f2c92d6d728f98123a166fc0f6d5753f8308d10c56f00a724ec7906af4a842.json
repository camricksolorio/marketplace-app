{"ast":null,"code":"var _jsxFileName = \"/Users/camricks/Desktop/marketplace-mvp/frontend/src/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState(null);\n  const [status, setStatus] = useState(null);\n  const handleSubmit = async e => {\n    //prevents default HTML behavior, in this case for the <input> event \n    setStatus(1);\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('image', image);\n    formData.append('status', status);\n    const timestamp = new Date().toISOString();\n    formData.append('timestamp', timestamp);\n    for (const pair of formData.entries()) {\n      console.log(pair[0], pair[1]);\n    }\n\n    // try {\n    //     const response = await axios.post('http://localhost:5001/upload', formData, {\n    //         headers: {\n    //             'Content-Type': 'multipart/form-data',\n    //         },\n    //     });\n\n    //     console.log('Upload successful:', response.data);\n    // } catch (error) {\n    //     console.error('Error uploading the form data', error);\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"RgKP+FhqSRuyoh9od8HUiZGiodc=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","description","setDescription","image","setImage","status","setStatus","handleSubmit","e","preventDefault","formData","FormData","append","timestamp","Date","toISOString","pair","entries","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","files","_c","$RefreshReg$"],"sources":["/Users/camricks/Desktop/marketplace-mvp/frontend/src/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadForm() {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState(null);\n    const [status, setStatus] = useState(null);\n\n\n    const handleSubmit = async (e) => {\n        //prevents default HTML behavior, in this case for the <input> event \n        setStatus(1);\n        e.preventDefault();\n\n\n        const formData = new FormData();\n        formData.append('title', title);\n        formData.append('description', description);\n        formData.append('image', image);\n        formData.append('status', status);\n\n        const timestamp = new Date().toISOString();\n        formData.append('timestamp', timestamp);\n\n        for (const pair of formData.entries()) {\n            console.log(pair[0], pair[1]);\n        }\n\n        // try {\n        //     const response = await axios.post('http://localhost:5001/upload', formData, {\n        //         headers: {\n        //             'Content-Type': 'multipart/form-data',\n        //         },\n        //     });\n\n        //     console.log('Upload successful:', response.data);\n        // } catch (error) {\n        //     console.error('Error uploading the form data', error);\n        // }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Title:</label>\n                <input\n                    type='text'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n            </div>\n            <div>\n                <label>Description:</label>\n                <input\n                    type='text'\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                />\n            </div>\n            <div>\n                <label>Image:</label>\n                <input\n                    type='file'\n                    onChange={(e) => setImage(e.target.files[0])}\n                    required\n                />\n            </div>\n            <button type='submit'>Upload</button>\n        </form>\n    )\n}\n\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}